//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.13 at 07:02:50 AM EST 
//


package org.ed_fi._0100rfc;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for StaffClassificationType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="StaffClassificationType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Pre-kindergarten Teachers"/>
 *     &lt;enumeration value="Kindergarten Teachers"/>
 *     &lt;enumeration value="Elementary Teachers"/>
 *     &lt;enumeration value="Secondary Teachers"/>
 *     &lt;enumeration value="Ungraded Teachers"/>
 *     &lt;enumeration value="Paraprofessionals/Instructional Aides"/>
 *     &lt;enumeration value="School Counselors"/>
 *     &lt;enumeration value="Librarians/Media Specialists"/>
 *     &lt;enumeration value="Library/Media Support Staff"/>
 *     &lt;enumeration value="LEA Administrators"/>
 *     &lt;enumeration value="LEA Administrative Support Staff"/>
 *     &lt;enumeration value="School Administrators"/>
 *     &lt;enumeration value="School Administrative Support Staff"/>
 *     &lt;enumeration value="Student Support Services Staff"/>
 *     &lt;enumeration value="All Other Support Staff"/>
 *     &lt;enumeration value="Instructional Coordinators and Supervisors to the Staff"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "StaffClassificationType")
@XmlEnum
public enum StaffClassificationType {

    @XmlEnumValue("Pre-kindergarten Teachers")
    PRE_KINDERGARTEN_TEACHERS("Pre-kindergarten Teachers"),
    @XmlEnumValue("Kindergarten Teachers")
    KINDERGARTEN_TEACHERS("Kindergarten Teachers"),
    @XmlEnumValue("Elementary Teachers")
    ELEMENTARY_TEACHERS("Elementary Teachers"),
    @XmlEnumValue("Secondary Teachers")
    SECONDARY_TEACHERS("Secondary Teachers"),
    @XmlEnumValue("Ungraded Teachers")
    UNGRADED_TEACHERS("Ungraded Teachers"),
    @XmlEnumValue("Paraprofessionals/Instructional Aides")
    PARAPROFESSIONALS_INSTRUCTIONAL_AIDES("Paraprofessionals/Instructional Aides"),
    @XmlEnumValue("School Counselors")
    SCHOOL_COUNSELORS("School Counselors"),
    @XmlEnumValue("Librarians/Media Specialists")
    LIBRARIANS_MEDIA_SPECIALISTS("Librarians/Media Specialists"),
    @XmlEnumValue("Library/Media Support Staff")
    LIBRARY_MEDIA_SUPPORT_STAFF("Library/Media Support Staff"),
    @XmlEnumValue("LEA Administrators")
    LEA_ADMINISTRATORS("LEA Administrators"),
    @XmlEnumValue("LEA Administrative Support Staff")
    LEA_ADMINISTRATIVE_SUPPORT_STAFF("LEA Administrative Support Staff"),
    @XmlEnumValue("School Administrators")
    SCHOOL_ADMINISTRATORS("School Administrators"),
    @XmlEnumValue("School Administrative Support Staff")
    SCHOOL_ADMINISTRATIVE_SUPPORT_STAFF("School Administrative Support Staff"),
    @XmlEnumValue("Student Support Services Staff")
    STUDENT_SUPPORT_SERVICES_STAFF("Student Support Services Staff"),
    @XmlEnumValue("All Other Support Staff")
    ALL_OTHER_SUPPORT_STAFF("All Other Support Staff"),
    @XmlEnumValue("Instructional Coordinators and Supervisors to the Staff")
    INSTRUCTIONAL_COORDINATORS_AND_SUPERVISORS_TO_THE_STAFF("Instructional Coordinators and Supervisors to the Staff");
    private final String value;

    StaffClassificationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StaffClassificationType fromValue(String v) {
        for (StaffClassificationType c: StaffClassificationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
