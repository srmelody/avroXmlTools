/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edfi;  
@SuppressWarnings("all")
public class AcademicWeek extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema.parse("{\"type\":\"record\",\"name\":\"AcademicWeek\",\"namespace\":\"edfi\",\"fields\":[{\"name\":\"WeekIdentifier\",\"type\":\"string\"},{\"name\":\"BeginDate\",\"type\":\"string\"},{\"name\":\"EndDate\",\"type\":\"string\"},{\"name\":\"TotalInstructionalDays\",\"type\":\"string\"},{\"name\":\"CalendarDateReference\",\"type\":\"string\"}]}");
  @Deprecated public java.lang.CharSequence WeekIdentifier;
  @Deprecated public java.lang.CharSequence BeginDate;
  @Deprecated public java.lang.CharSequence EndDate;
  @Deprecated public java.lang.CharSequence TotalInstructionalDays;
  @Deprecated public java.lang.CharSequence CalendarDateReference;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return WeekIdentifier;
    case 1: return BeginDate;
    case 2: return EndDate;
    case 3: return TotalInstructionalDays;
    case 4: return CalendarDateReference;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: WeekIdentifier = (java.lang.CharSequence)value$; break;
    case 1: BeginDate = (java.lang.CharSequence)value$; break;
    case 2: EndDate = (java.lang.CharSequence)value$; break;
    case 3: TotalInstructionalDays = (java.lang.CharSequence)value$; break;
    case 4: CalendarDateReference = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'WeekIdentifier' field.
   */
  public java.lang.CharSequence getWeekIdentifier() {
    return WeekIdentifier;
  }

  /**
   * Sets the value of the 'WeekIdentifier' field.
   * @param value the value to set.
   */
  public void setWeekIdentifier(java.lang.CharSequence value) {
    this.WeekIdentifier = value;
  }

  /**
   * Gets the value of the 'BeginDate' field.
   */
  public java.lang.CharSequence getBeginDate() {
    return BeginDate;
  }

  /**
   * Sets the value of the 'BeginDate' field.
   * @param value the value to set.
   */
  public void setBeginDate(java.lang.CharSequence value) {
    this.BeginDate = value;
  }

  /**
   * Gets the value of the 'EndDate' field.
   */
  public java.lang.CharSequence getEndDate() {
    return EndDate;
  }

  /**
   * Sets the value of the 'EndDate' field.
   * @param value the value to set.
   */
  public void setEndDate(java.lang.CharSequence value) {
    this.EndDate = value;
  }

  /**
   * Gets the value of the 'TotalInstructionalDays' field.
   */
  public java.lang.CharSequence getTotalInstructionalDays() {
    return TotalInstructionalDays;
  }

  /**
   * Sets the value of the 'TotalInstructionalDays' field.
   * @param value the value to set.
   */
  public void setTotalInstructionalDays(java.lang.CharSequence value) {
    this.TotalInstructionalDays = value;
  }

  /**
   * Gets the value of the 'CalendarDateReference' field.
   */
  public java.lang.CharSequence getCalendarDateReference() {
    return CalendarDateReference;
  }

  /**
   * Sets the value of the 'CalendarDateReference' field.
   * @param value the value to set.
   */
  public void setCalendarDateReference(java.lang.CharSequence value) {
    this.CalendarDateReference = value;
  }

  /** Creates a new AcademicWeek RecordBuilder */
  public static edfi.AcademicWeek.Builder newBuilder() {
    return new edfi.AcademicWeek.Builder();
  }
  
  /** Creates a new AcademicWeek RecordBuilder by copying an existing Builder */
  public static edfi.AcademicWeek.Builder newBuilder(edfi.AcademicWeek.Builder other) {
    return new edfi.AcademicWeek.Builder(other);
  }
  
  /** Creates a new AcademicWeek RecordBuilder by copying an existing AcademicWeek instance */
  public static edfi.AcademicWeek.Builder newBuilder(edfi.AcademicWeek other) {
    return new edfi.AcademicWeek.Builder(other);
  }
  
  /**
   * RecordBuilder for AcademicWeek instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AcademicWeek>
    implements org.apache.avro.data.RecordBuilder<AcademicWeek> {

    private java.lang.CharSequence WeekIdentifier;
    private java.lang.CharSequence BeginDate;
    private java.lang.CharSequence EndDate;
    private java.lang.CharSequence TotalInstructionalDays;
    private java.lang.CharSequence CalendarDateReference;

    /** Creates a new Builder */
    private Builder() {
      super(edfi.AcademicWeek.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edfi.AcademicWeek.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing AcademicWeek instance */
    private Builder(edfi.AcademicWeek other) {
            super(edfi.AcademicWeek.SCHEMA$);
      if (isValidValue(fields()[0], other.WeekIdentifier)) {
        this.WeekIdentifier = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.WeekIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.BeginDate)) {
        this.BeginDate = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.BeginDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.EndDate)) {
        this.EndDate = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.EndDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.TotalInstructionalDays)) {
        this.TotalInstructionalDays = (java.lang.CharSequence) data().deepCopy(fields()[3].schema(), other.TotalInstructionalDays);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CalendarDateReference)) {
        this.CalendarDateReference = (java.lang.CharSequence) data().deepCopy(fields()[4].schema(), other.CalendarDateReference);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'WeekIdentifier' field */
    public java.lang.CharSequence getWeekIdentifier() {
      return WeekIdentifier;
    }
    
    /** Sets the value of the 'WeekIdentifier' field */
    public edfi.AcademicWeek.Builder setWeekIdentifier(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.WeekIdentifier = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'WeekIdentifier' field has been set */
    public boolean hasWeekIdentifier() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'WeekIdentifier' field */
    public edfi.AcademicWeek.Builder clearWeekIdentifier() {
      WeekIdentifier = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'BeginDate' field */
    public java.lang.CharSequence getBeginDate() {
      return BeginDate;
    }
    
    /** Sets the value of the 'BeginDate' field */
    public edfi.AcademicWeek.Builder setBeginDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.BeginDate = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'BeginDate' field has been set */
    public boolean hasBeginDate() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'BeginDate' field */
    public edfi.AcademicWeek.Builder clearBeginDate() {
      BeginDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'EndDate' field */
    public java.lang.CharSequence getEndDate() {
      return EndDate;
    }
    
    /** Sets the value of the 'EndDate' field */
    public edfi.AcademicWeek.Builder setEndDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.EndDate = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'EndDate' field has been set */
    public boolean hasEndDate() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'EndDate' field */
    public edfi.AcademicWeek.Builder clearEndDate() {
      EndDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'TotalInstructionalDays' field */
    public java.lang.CharSequence getTotalInstructionalDays() {
      return TotalInstructionalDays;
    }
    
    /** Sets the value of the 'TotalInstructionalDays' field */
    public edfi.AcademicWeek.Builder setTotalInstructionalDays(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.TotalInstructionalDays = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'TotalInstructionalDays' field has been set */
    public boolean hasTotalInstructionalDays() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'TotalInstructionalDays' field */
    public edfi.AcademicWeek.Builder clearTotalInstructionalDays() {
      TotalInstructionalDays = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'CalendarDateReference' field */
    public java.lang.CharSequence getCalendarDateReference() {
      return CalendarDateReference;
    }
    
    /** Sets the value of the 'CalendarDateReference' field */
    public edfi.AcademicWeek.Builder setCalendarDateReference(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.CalendarDateReference = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'CalendarDateReference' field has been set */
    public boolean hasCalendarDateReference() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'CalendarDateReference' field */
    public edfi.AcademicWeek.Builder clearCalendarDateReference() {
      CalendarDateReference = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public AcademicWeek build() {
      try {
        AcademicWeek record = new AcademicWeek();
        record.WeekIdentifier = fieldSetFlags()[0] ? this.WeekIdentifier : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.BeginDate = fieldSetFlags()[1] ? this.BeginDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.EndDate = fieldSetFlags()[2] ? this.EndDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.TotalInstructionalDays = fieldSetFlags()[3] ? this.TotalInstructionalDays : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.CalendarDateReference = fieldSetFlags()[4] ? this.CalendarDateReference : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
